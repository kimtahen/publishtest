{"version":3,"sources":["webpack:///./src/pages/Announcement.js","webpack:///./src/pages/Announcement.module.css"],"names":["Studies","data","location","edges","allMarkdownRemark","useState","onClickListener","setOnClickListener","setIsVisibleList","useEffect","map","func","index","sideList","pathName","pathname","className","styles","wrapper","value","TemplatesWrapper","key","isVisible","setIsVisible","push","PreviewTemplate","frontmatter","node","onClickEvent","onClickResetEvent","Template","html","onClick","previewWrapper","previewFrontmatter","date","title","create","slideAnimation","useSpring","opacity","transform","from","div","style","announcementWrapper","margin","color","fontSize","renderHTML","pageQuery","module","exports"],"mappings":"6FAAA,oLAQe,SAASA,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SAChCC,EAAQF,EAAKG,kBAAkBD,MADa,EAEJE,oBAAU,GAAjDC,EAF2C,KAE1BC,EAF0B,KAG5CC,EAAmB,GAYzB,OAVAC,qBAAU,WACRD,EAAiBE,KAAI,SAACC,EAAMC,GAExBD,EADEC,IAAUN,EACP,EAEA,QAGR,CAACA,IAGF,kBAAC,IAAD,CAAQO,SAAU,EAAGC,SAAUZ,EAASa,UACtC,yBAAKC,UAAWC,IAAOC,SACpBf,EAAMO,KAAI,SAACS,EAAOP,GACjB,OACE,kBAACQ,EAAD,CAAkBD,MAAOA,EAAOP,MAAOA,EAAOS,IAAKT,EAAOJ,iBAAkBA,EAC1DD,mBAAoBA,SAQlD,SAASa,EAAT,GAAmF,IAAvDD,EAAsD,EAAtDA,MAAOP,EAA+C,EAA/CA,MAAOJ,EAAwC,EAAxCA,iBAAkBD,EAAsB,EAAtBA,mBAAsB,EAC9CF,mBAAS,GAApCiB,EADyE,KAC9DC,EAD8D,KAEhFf,EAAiBgB,KAAKD,GAItB,OACE,6BACE,kBAACE,EAAD,CAAiBC,YAAaP,EAAMQ,KAAKD,YAAaJ,UAAWA,EAAWM,aAJ3D,kBAAMrB,EAAmBK,IAKzBiB,kBANK,kBAAMtB,GAAoB,MAOhC,IAAde,GAAoB,kBAACQ,EAAD,CACpBT,IAAKT,EACLU,UAAWA,EACXI,YAAaP,EAAMQ,KAAKD,YACxBK,KAAMZ,EAAMQ,KAAKI,QAOzB,SAASN,EAAT,GAAuF,IAA5DC,EAA2D,EAA3DA,YAAaJ,EAA8C,EAA9CA,UAAWM,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,kBAC/D,OACE,yBAAKG,QAAS,WACPV,EACAO,IADWD,KAEfZ,UAAWC,IAAOgB,gBACnB,0BAAMjB,UAAWC,IAAOiB,oBAAqBR,EAAYS,MACzD,wBAAInB,UAAWC,IAAOiB,oBAAqBR,EAAYU,OACvD,0BAAMpB,UAAWC,IAAOiB,oBAAoB,wCAAcR,EAAYW,UAK5E,SAASP,EAAT,GAA0C,IAAtBJ,EAAqB,EAArBA,YAAaK,EAAQ,EAARA,KACzBO,EAAiBC,YAAU,CAC/BC,QAAS,EACTC,UAAW,kBACXC,KAAM,CACJF,QAAS,EACTC,UAAW,uBAGf,OACE,kBAAC,IAASE,IAAV,CAAcC,MAAON,GACrB,yBAAKtB,UAAWC,IAAO4B,qBACrB,yBAAK7B,UAAWC,IAAOS,aACrB,wBACEkB,MAAO,CACLE,OAAQ,QAGTpB,EAAYU,OAEf,0BACEQ,MAAO,CACLG,MAAO,OACPC,SAAU,WAGXtB,EAAYS,MAEf,6BACA,0BACES,MAAO,CACLG,MAAO,OACPC,SAAU,WAGZ,wCAActB,EAAYW,UAG7BY,IAAWlB,KAMX,IAAMmB,EAAS,c,qBClHtBC,EAAOC,QAAU,CAAC,QAAU,sCAAsC,oBAAsB,kDAAkD,YAAc,0CAA0C,eAAiB,6CAA6C,mBAAqB","file":"component---src-pages-announcement-js-3309807d794da7b83742.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport renderHTML from \"react-render-html\"\r\nimport { useTransition, useSpring, animated } from \"react-spring\"\r\n\r\nimport Layout from \"../components/layout/layout\"\r\nimport styles from \"./Announcement.module.css\"\r\n\r\n\r\nexport default function Studies({ data, location }) {\r\n  const edges = data.allMarkdownRemark.edges\r\n  const [onClickListener, setOnClickListener] = useState(-1)\r\n  const setIsVisibleList = []\r\n\r\n  useEffect(() => {\r\n    setIsVisibleList.map((func, index) => {\r\n      if (index === onClickListener) {\r\n        func(1)\r\n      } else {\r\n        func(0)\r\n      }\r\n    })\r\n  }, [onClickListener])\r\n\r\n  return (\r\n    <Layout sideList={0} pathName={location.pathname}>\r\n      <div className={styles.wrapper}>\r\n        {edges.map((value, index) => {\r\n          return (\r\n            <TemplatesWrapper value={value} index={index} key={index} setIsVisibleList={setIsVisibleList}\r\n                              setOnClickListener={setOnClickListener}/>\r\n          )\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nfunction TemplatesWrapper({ value, index, setIsVisibleList, setOnClickListener }) {\r\n  const [isVisible, setIsVisible] = useState(0)\r\n  setIsVisibleList.push(setIsVisible)\r\n  const onClickResetEvent = () => setOnClickListener(-1)\r\n  const onClickEvent = () => setOnClickListener(index)\r\n\r\n  return (\r\n    <div>\r\n      <PreviewTemplate frontmatter={value.node.frontmatter} isVisible={isVisible} onClickEvent={onClickEvent}\r\n                       onClickResetEvent={onClickResetEvent}/>\r\n      {(isVisible === 1) && <Template\r\n        key={index}\r\n        isVisible={isVisible}\r\n        frontmatter={value.node.frontmatter}\r\n        html={value.node.html}\r\n      />}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction PreviewTemplate({ frontmatter, isVisible, onClickEvent, onClickResetEvent }) {\r\n  return (\r\n    <div onClick={() => {\r\n      if (!isVisible) onClickEvent()\r\n      else onClickResetEvent()\r\n    }} className={styles.previewWrapper}>\r\n      <span className={styles.previewFrontmatter}>{frontmatter.date}</span>\r\n      <h3 className={styles.previewFrontmatter}>{frontmatter.title}</h3>\r\n      <span className={styles.previewFrontmatter}><i>posted by {frontmatter.create}</i></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction Template({ frontmatter, html }) {\r\n  const slideAnimation = useSpring({\r\n    opacity: 1,\r\n    transform: 'translateY(0px)',\r\n    from: {\r\n      opacity: 0,\r\n      transform: 'translateY(-50px)'\r\n    }\r\n  });\r\n  return (\r\n    <animated.div style={slideAnimation}>\r\n    <div className={styles.announcementWrapper}>\r\n      <div className={styles.frontmatter}>\r\n        <h1\r\n          style={{\r\n            margin: \"5px\"\r\n          }}\r\n        >\r\n          {frontmatter.title}\r\n        </h1>\r\n        <span\r\n          style={{\r\n            color: \"gray\",\r\n            fontSize: \"0.8rem\"\r\n          }}\r\n        >\r\n          {frontmatter.date}\r\n        </span>\r\n        <br/>\r\n        <span\r\n          style={{\r\n            color: \"gray\",\r\n            fontSize: \"0.8rem\"\r\n          }}\r\n        >\r\n          <i>posted by {frontmatter.create}</i>\r\n        </span>\r\n      </div>\r\n      {renderHTML(html)}\r\n    </div>\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n  allMarkdownRemark (filter: {fileAbsolutePath: {regex: \"/announcements/\"}} sort:{fields: frontmatter___number, order: DESC}) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          title\r\n          date\r\n          create\r\n        }\r\n        html\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Announcement-module--wrapper--2CW9g\",\"announcementWrapper\":\"Announcement-module--announcementWrapper--zpGVI\",\"frontmatter\":\"Announcement-module--frontmatter--8FLG9\",\"previewWrapper\":\"Announcement-module--previewWrapper--2N0jZ\",\"previewFrontmatter\":\"Announcement-module--previewFrontmatter--mCAkc\"};"],"sourceRoot":""}